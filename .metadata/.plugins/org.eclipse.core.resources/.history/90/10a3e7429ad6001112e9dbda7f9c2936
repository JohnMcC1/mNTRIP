package com.mntripclient;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Future;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.params.HttpConnectionParams;

import android.R.string;
import android.net.http.AndroidHttpClient;
import android.util.Log;

public class NTRIPCasterDownloadTask implements Runnable {

	private static String MOUNTPOINT = "http://mntripcaster.appspot.com/mntripstr0";
//	private static String MOUNTPOINT = "http://www.wp.pl";
	
	
	private final ExecutorService httpExecutorService;
	private AndroidHttpClient httpClient;
	private URI uri;

	private HttpGet request;
	private HttpResponse response;
	
	private long contentLength;
	private byte [] content;
	
	public NTRIPCasterDownloadTask(ExecutorService httpExecutorService) {
		this.httpExecutorService = httpExecutorService;
		httpClient = AndroidHttpClient.newInstance("mNTRIPCasterDownload");
		
		HttpConnectionParams.setTcpNoDelay(httpClient.getParams(), true);
		HttpConnectionParams.setSoTimeout(httpClient.getParams(), 2000);
		
		try {
			uri = new URI(MOUNTPOINT);
		} catch (URISyntaxException e) {
			e.printStackTrace();
		}
		
		request = new HttpGet();
		request.setURI(uri);
		
		content = new byte[10000];
		
	}
	
	public void run() {
		try {
			response = httpClient.execute(request);
			contentLength = response.getEntity().getContentLength();
			
			response.getEntity().getContent().read(content);
			Log.d("NTRIPCasterDownloadTask", new String(content));
		} catch (Exception e) {
			e.printStackTrace();
		}
	
//		try {
//			Thread.sleep(1000);
//		} catch (InterruptedException e) {
//			e.printStackTrace();
//		}
		
		Future<?> future = httpExecutorService.submit(this);
	}

}
