package com.mntripclient;

import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import com.google.android.maps.MapActivity;
import com.google.android.maps.MapView;
import com.google.android.maps.Overlay;

import android.location.LocationManager;
import android.os.Bundle;

public class MainActivity extends MapActivity {

	private GPSOPointOverlay gpsPhoneOverlay;
	private GPSOPointOverlay gpsBluetoothOverlay;
	private GPSOPointOverlay dgpsBluetoothOverlay;
	private GPSOPointOverlay dgpsBluetoothBufferedOverlay;
	
	private GPSRouteOverlay gpsRouteOverlay;

	private LocationManager locationManager;

	private ExecutorService httpExecutorService;
	private ExecutorService bluetoothExecutorService;
	private ExecutorService coordinatesExecutorService;
	 
	private List<Overlay> mapOverlays;
	private MapView mapView;

	private ArrayBlockingQueue<byte []> httpBluetoothQueue;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.mapview);

		prepareMapView();
		prepareOverlays();
		addOverlays();

		subcribeLocationManager();
		
		httpBluetoothQueue = new ArrayBlockingQueue<byte[]>(10);
		
		initHTTPTask();
		initBluetootTask();
	}

	@Override
	public synchronized void onPause() {
		super.onPause();
	}

	@Override
	public void onStop() {
		super.onStop();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		httpExecutorService.shutdown();
		bluetoothExecutorService.shutdown();
		System.exit(0);
	}

	private void prepareMapView() {
		mapView = (MapView) findViewById(R.id.mapView);
		mapView.setSatellite(true);
		mapView.setBuiltInZoomControls(true);
	}

	private void prepareOverlays() {
		mapOverlays = mapView.getOverlays();
		gpsPhoneOverlay = new GPSOPointOverlay(this.getResources().getDrawable(R.drawable.redpoint), mapView);
		gpsBluetoothOverlay = new GPSOPointOverlay(this.getResources().getDrawable(R.drawable.greenpoint), mapView);
		dgpsBluetoothOverlay = new GPSOPointOverlay(this.getResources().getDrawable(R.drawable.bluepoint), mapView);
		dgpsBluetoothBufferedOverlay = new GPSOPointOverlay(this.getResources().getDrawable(R.drawable.yellowpoint), mapView);
		gpsRouteOverlay = new GPSRouteOverlay(mapView);
	}

	private void subcribeLocationManager() {
		locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
		locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, new GPSPhoneListener(gpsPhoneOverlay));
	}

	private void addOverlays() {
		mapOverlays.add(gpsRouteOverlay);
		mapOverlays.add(gpsPhoneOverlay);
		mapOverlays.add(gpsBluetoothOverlay);
		mapOverlays.add(dgpsBluetoothOverlay);
		mapOverlays.add(dgpsBluetoothBufferedOverlay);

		gpsRouteOverlay.readPointsFromFile("mNTRIPClientRoute.txt");
	}

	private void initHTTPTask() {
		httpExecutorService = Executors.newSingleThreadExecutor();
		httpExecutorService.execute(new HTTPTask(httpBluetoothQueue));
	}

	private void initBluetootTask() {
		bluetoothExecutorService = Executors.newSingleThreadExecutor();
		bluetoothExecutorService.execute(new BluetoothTask(httpBluetoothQueue));
	}
	
	@Override
	protected boolean isRouteDisplayed() {
		return false;
	}
}
